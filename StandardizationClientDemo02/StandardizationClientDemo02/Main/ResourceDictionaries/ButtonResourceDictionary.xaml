<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="ButtonStyle_Title" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,0,1,1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseLeftButtonDown01">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.85"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.85"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <ContentPresenter Content=""/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown" SourceName="grid">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseLeftButtonDown01}"/>
                        </EventTrigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsPressed" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCommonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--定义圆角-->
                    <Border Name="gridBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5,5,5,5">
                        <Border.Background>
                            <Brush>SkyBlue</Brush>
                        </Border.Background>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--光标进入背景-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="gridBorder" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                        <GradientStop Color="#87CEEB" Offset="0.1"/>
                                        <GradientStop Color="#FFFFFF" Offset="0.5"/>
                                        <GradientStop Color="#87CEEB" Offset="0.91"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <!---鼠标点击背景-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="gridBorder" Property="BorderThickness" Value="2"/>
                            <Setter TargetName="gridBorder" Property="Background" Value="#87CEEA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle_TooleBar" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="13.333"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0,0,1,1"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnMouseEnter01">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="_GridGB">
                                <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.05" Value="#33C4C4C4"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave01"/>
                        <Storyboard x:Key="ButtonEnter">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="_GridGB">
                                <EasingColorKeyFrame KeyTime="0" Value="#00000000"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.03" Value="#33FFFFFF"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ButtonLeave"/>
                        <Storyboard x:Key="ButtonEnter_Copy01">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="_GridGB">
                                <EasingColorKeyFrame KeyTime="0" Value="#33FFFFFF"/>
                                <EasingColorKeyFrame KeyTime="0:0:0.03" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="GridImgButtonDown">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="GridImg">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.03" Value="0.9"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.06" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="GridImg">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.03" Value="0.9"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.06" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="_GridGB" Margin="0" Width="90" Height="75" Background="#00000000">
                        <Grid x:Name="GridImg" HorizontalAlignment="Center" Background="{TemplateBinding Background}" VerticalAlignment="Top" Width="58" Height="48" Margin="0,5,0,0" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Grid.BindingGroup>
                                <BindingGroup/>
                            </Grid.BindingGroup>
                        </Grid>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown">
                            <BeginStoryboard x:Name="GridImgButtonDown_BeginStoryboard01" Storyboard="{StaticResource GridImgButtonDown}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown" SourceName="GridImg">
                            <BeginStoryboard x:Name="GridImgButtonDown_BeginStoryboard" Storyboard="{StaticResource GridImgButtonDown}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                            <BeginStoryboard x:Name="OnMouseLevel_BeginStoryboard" Storyboard="{StaticResource ButtonEnter_Copy01}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                            <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard" Storyboard="{StaticResource ButtonEnter}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="IsDefaulted" Value="true"/>
                        <Trigger Property="IsPressed" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonWithTextBoxStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" >
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Command="{TemplateBinding Command}" Margin="3" Cursor="Hand" >
                                <Button.Background>
                                    <ImageBrush ImageSource="/Main/Images/search.png"/>
                                </Button.Background>
                            </Button>
                            <TextBlock Grid.Column="2" x:Name="waterMaskText" Margin="5" FocusVisualStyle="{x:Null}" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="Gray" Text="{TemplateBinding Tag}" Visibility="Hidden"/>
                            <TextBox Grid.Column="2" x:Name="myText" Background="Transparent" BorderThickness="0" TextWrapping="Wrap" Text="{Binding QueryCondition, Mode=TwoWay}" VerticalAlignment="Center"/>
                            <Rectangle Grid.Column="1" HorizontalAlignment="Left" Fill="{TemplateBinding BorderBrush}" Width="1" Margin="3"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" SourceName="myText" Value="">
                            <Setter Property="Visibility" TargetName="waterMaskText" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftImageButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <StackPanel Orientation="Horizontal" Background="#00FFFFFF">
                        <Grid Background="{TemplateBinding Background}" Width="20" Height="20" VerticalAlignment="Center"/>
                        <ContentPresenter Content="{TemplateBinding Content}" Margin="10,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>